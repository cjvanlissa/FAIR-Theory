library(tidySEM)
install.packages("OpenMx")
library(OpenMx)
install.packages("poLCA")
library(tidySEM)
data(values,
package="poLCA")
values_ordered
values_ordered = as.data.frame(lapply(values,
ordered))
values_ordered
m3 = mx_lca(values_ordered,
classes=2:5)
table_fit(m3)
lr_lmr(m3)
object1 = m3[[1]]; object2 = m3[[2]]
lr_res <- vuongtest(object1, object2, score1 = function(x) mixgrads(x) *
-0.5, score2 = function(x) mixgrads(x) * -0.5, nested = FALSE)
library(nonnest2)
lr_res <- vuongtest(object1, object2, score1 = function(x) mixgrads(x) *
-0.5, score2 = function(x) mixgrads(x) * -0.5, nested = FALSE)
lr_res <- vuongtest(object2, object1, score1 = function(x) mixgrads(x) *
-0.5, score2 = function(x) mixgrads(x) * -0.5, nested = FALSE)
lr_res <- vuongtest(object2, object1, score1 = function(x) mixgrads(x) *
-0.5, score2 = function(x) tidySEM:::mixgrads(x) * -0.5, nested = FALSE)
lr_res <- vuongtest(object2, object1, score1 = function(x) tidySEM:::mixgrads(x) *
-0.5, score2 = function(x) tidySEM:::mixgrads(x) * -0.5, nested = FALSE)
BLRT(m3)
warnings()
worcs::git_update()
knitr::include_graphics("images/morris.png")
knitr::include_graphics("images/morris_dag.png")
gert::git_remote_list()
gert::git_remote_remove("origin")
gert::git_remote_add("https://github.com/cjvanlissa/FAIR-Theory.git")
worcs::git_update()
gert::git_remote_push()
gert::git_push()
gert::git_remote_remove("origin")
gert::git_remote_add("https://github.com/cjvanlissa/FAIR-Theory.git")
worcs::git_update()
worcs::git_update()
knitr::include_graphics("images/sdt_lissa.png")
SDT1 <- read.csv(system.file("sdt1.txt", package = "theorytools"))
names(SDT1) <- c("N", "IF", "THEN", "Original")
SDT1[1, "Original", drop = TRUE]
SDT1[, "Original", drop = TRUE]
unique(SDT1[, "Original", drop = TRUE])
kable(SDT1[, 1:4], caption = "SDT translated into IF/THEN statements")
knitr::kable(SDT1[, 1:4], caption = "SDT translated into IF/THEN statements")
definitions <- read.csv(system.file("sdt_definitions.csv", package = "theorytools"))
kable(definitions[-1, ], caption = "Operationalizations of constructs in SDT")
knitr::kable(definitions[-1, ], caption = "Operationalizations of constructs in SDT")
knitr::kable(definitions[1, ], caption = "Operationalizations of constructs in SDT")
knitr::kable(definitions[, -c(1,3,4)], caption = "Operationalizations of constructs in SDT")
edges_raw <- read.csv(system.file("sdt.txt", package = "theorytools"))
knitr::kable(edges_raw[, 1:3], caption = "IF–THEN statements → causal connections")
edges_raw <- read.csv(system.file("sdt.txt", package = "theorytools"))
knitr::kable(unique(edges_raw[, 2:3]))
knitr::include_graphics("images/empirical_cycle2.svg")
glue::glue("dag {paste0(SDT$from} -> {SDT$to})")
glue::glue("dag {SDT$from} -> {SDT$to})")
SDT <- unique(edges_raw[, c(2:3)])
glue::glue("dag {SDT$from} -> {SDT$to})")
edges_raw <- read.csv(system.file("sdt.txt", package = "theorytools"))
SDT <- unique(edges_raw[, 2:3])
knitr::kable(SDT)
dagitty::dagitty(
paste0("dag {",
paste0(SDT$from, " -> ", SDT$to, collapse = "\n"),
"}")
)
knitr::include_graphics("images/morris_dag.png")
df_sim <- simulate_data(SDT, n = 497)
df_sim <- simulate_data(SDT, n = 497)
library(theorytools)
df_sim <- simulate_data(SDT, n = 497)
SDT
SDT
SDT <- dagitty::dagitty(
paste0("dag {",
paste0(SDT$from, " -> ", SDT$to, collapse = "\n"),
"}")
)
library(tidySEM)
library(ggplot2)
# Specify plot layout
lo <- get_layout(
"EE", "",   "IN", "WB",
"",   "LC", "",   "",
"NE", "",   "IM", "HD",
rows = 3
)
# Rename nodes
renam <- c(EE = "external_event", NE = "needs", IN = "integration", WB = "wellbeing",
LC = "locus_of_causality", HD = "healthy_development", IM = "intrinsic_motivation")
lo[match(names(renam), lo)] <- renam
# Prepare the graph
p <- prepare_graph(SDT, layout = lo, angle = 179, text_size = 3, rect_width = 1.5, spacing_x = 2.5)
# Change node shape
p$nodes$shape <- "rect"
# Change node labels
renam <- c(external_event = "external\nevent", needs = "needs", integration = "integration", wellbeing = "wellbeing",
locus_of_causality = "locus of\ncausality", healthy_development = "healthy\ndev.", intrinsic_motivation = "intrinsic\nmotivation")
p$nodes$label <- renam[p$nodes$name]
# Plot the graph
plot(p)
df_sim <- simulate_data(SDT, n = 497)
df_sim
SDT
knitr::include_graphics("images/zenodo.png")
tidySEM::graph_sem(SDT)
adjustmentSets(SDT, exposure="external_event", outcome="wellbeing")
library(dagitty)
adjustmentSets(SDT, exposure="external_event", outcome="wellbeing")
library(dagitty)
adjustmentSets(SDT, exposure="external_event", outcome="wellbeing")
library(dagitty)
adjustmentSets(SDT, exposure="external_event", outcome="intrinsic_motivation")
library(dagitty)
adjustmentSets(SDT, exposure="intrinsic_motivation", outcome="wellbeing")
simulate_data(SDT, n = 5)
round(simulate_data(SDT, n = 5), 2)
SDT
# Power analysis with hypothesized parameter values
sdt_coef <- dagitty('dag {
intrinsic_motivation -> wellbeing [beta=.4]
needs -> wellbeing [beta=.2]
')
sdt_coef <- dagitty('dag {
intrinsic_motivation -> wellbeing [beta=.4]
needs -> wellbeing [beta=.2]
')
sdt_coef <- dagitty('dag {
intrinsic_motivation -> wellbeing [beta=.4]
needs -> wellbeing [beta=.2]
}')
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))
summary(lm(wellbeing ~ ., df_sim))$coefficients
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
table(
replicate(
n = 100,
{
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
}
)
)
set.seed(1)
prop.table(
table(
replicate(
n = 100,
{
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
}
)
)
)
set.seed(2)
prop.table(
table(
replicate(
n = 100,
{
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
}
)
)
)
set.seed(3)
prop.table(
table(
replicate(
n = 100,
{
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
}
)
)
)
set.seed(1)
prop.table(
table(
replicate(
n = 100,
{
df_sim <- simulate_data(sdt_coef, n = 200)
summary(lm(wellbeing ~ ., df_sim))$coefficients[2, 4] < .05
}
)
)
)
writeLines("", "fgt.bib")
rbbt::bbt_update_bib("presentation_-_FGT.qmd")
rbbt::bbt_update_bib("presentation_-_FGT.qmd")
